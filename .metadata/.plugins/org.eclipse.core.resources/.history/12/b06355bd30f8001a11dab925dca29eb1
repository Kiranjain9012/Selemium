import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
import Files.Payloads;
import Files.ReusableMethods;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;

import static io.restassured.RestAssured.*;

public class DynamicJson {
	
	@Test(dataProvider="BookToAdd")
	public void addBook(String isbn, String aisle) {
		
		//BaseURI
		RestAssured.baseURI = "http://216.10.245.166";
		
		//Add book
		String Addresponse = given().log().all().header("Content-Type","application/json").body(Payloads.addBook(isbn,aisle)).
	    when().post("/Library/Addbook.php").then().log().all().assertThat().statusCode(200).
		extract().response().asString();
		
		JsonPath js = ReusableMethods.parsingJson(Addresponse);
		String bookId = js.get("ID");
		System.out.println(bookId);
		
		//Get Book Details
		String GetResponse = 
		
		//Delete Book
		String DeleteResponse = given().log().all().header("Content-Type","application/json").
		body("{\r\n" + 
				"    \"ID\": \""+bookId+"\"\r\n" + 
				"}").when().delete("/Library/DeleteBook.php").then().log().all().assertThat().statusCode(200).
		extract().response().asString();
		
		JsonPath js1 = ReusableMethods.parsingJson(DeleteResponse);
		String message = js1.getString("msg");
		System.out.println(message);
		
		
	}
	
	@DataProvider(name="BookToAdd")
	public Object[][] getData() {
		
		return new Object[][] { {"rftg", "2345"}, {"tyhu","567"}, {"hhhh","458"} };
	} 
	
	
	

}
